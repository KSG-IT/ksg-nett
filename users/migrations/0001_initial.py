# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-01-25 20:44
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('commissions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('study', models.CharField(blank=True, default='', max_length=100)),
                ('profile_image', models.FileField(null=True, upload_to='profiles/')),
                ('phone', models.CharField(blank=True, default='', max_length=50)),
                ('study_address', models.CharField(blank=True, default='', max_length=100)),
                ('home_address', models.CharField(blank=True, default='', max_length=100)),
                ('start_ksg', models.DateField(auto_now_add=True)),
                ('ksg_status', models.CharField(choices=[('aktiv', 'Aktiv'), ('inaktiv', 'Ikke aktiv'), ('permittert', 'Permittert'), ('sluttet', 'Sluttet før tiden')], default=('aktiv', 'Aktiv'), max_length=32)),
                ('ksg_role', models.CharField(choices=[('gjengis', 'Gjengis'), ('funk', 'Funksjonær'), ('hangaround', 'Hangaround'), ('gjengpang', 'GjengPang'), ('funkepang', 'FunkePang'), ('hospitant', 'Hospitant')], default=('gjengis', 'Gjengis'), max_length=32)),
                ('commission', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='holders', to='commissions.Commission')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
                'default_related_name': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]

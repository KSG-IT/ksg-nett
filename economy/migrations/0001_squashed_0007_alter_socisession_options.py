# Generated by Django 3.2.18 on 2023-04-19 11:17

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import economy.models


class Migration(migrations.Migration):

    replaces = [
        ("economy", "0001_initial"),
        ("economy", "0002_initial"),
        ("economy", "0003_auto_20230209_1100"),
        ("economy", "0004_auto_20230303_1606"),
        ("economy", "0005_socibankaccount_external_charge_secret"),
        ("economy", "0006_externalcharge"),
        ("economy", "0007_alter_socisession_options"),
    ]

    initial = True

    dependencies = [
        ("bar_tab", "0003_bartabcustomer_webhook_url"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Deposit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=datetime.datetime.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("description", models.TextField(blank=True, default="")),
                ("amount", models.IntegerField()),
                (
                    "receipt",
                    models.ImageField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to=economy.models.Deposit._receipt_upload_location,
                    ),
                ),
                ("approved", models.BooleanField(default=False)),
                (
                    "approved_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
            ],
            options={
                "permissions": (
                    ("approve_deposit", "Can approve deposits"),
                    ("invalidate_deposit", "Can invalidate deposits"),
                ),
            },
        ),
        migrations.CreateModel(
            name="SociBankAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("balance", models.IntegerField(default=0, editable=False)),
                (
                    "card_uuid",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bank_account",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SociOrderSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("CREATED", "Created"),
                            ("FOOD_ORDERING", "Food Ordering"),
                            ("DRINK_ORDERING", "Drink Ordering"),
                            ("CLOSED", "Closed"),
                        ],
                        default="CREATED",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "order_pdf",
                    models.FileField(
                        blank=True, null=True, upload_to="soci_order_sessions"
                    ),
                ),
                (
                    "closed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="soci_order_sessions_closed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="soci_order_sessions_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invited_users",
                    models.ManyToManyField(
                        blank=True,
                        related_name="soci_order_sessions_invited_to",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Soci Order Session",
                "verbose_name_plural": "Soci Order Sessions",
            },
        ),
        migrations.CreateModel(
            name="SociProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("FOOD", "Food"), ("DRINK", "Drink")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "sku_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Product SKU number"
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("price", models.IntegerField()),
                (
                    "description",
                    models.TextField(
                        blank=True, default=None, max_length=200, null=True
                    ),
                ),
                ("icon", models.CharField(blank=True, max_length=2, null=True)),
                ("default_stilletime_product", models.BooleanField(default=False)),
                ("hide_from_api", models.BooleanField(default=False)),
                (
                    "sg_id",
                    models.IntegerField(
                        blank=True, default=None, null=True, unique=True
                    ),
                ),
                (
                    "start",
                    models.DateTimeField(blank=True, null=True, verbose_name="start"),
                ),
                (
                    "end",
                    models.DateTimeField(blank=True, null=True, verbose_name="end"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "destination",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="destination_transfers",
                        to="economy.socibankaccount",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="source_transfers",
                        to="economy.socibankaccount",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SociSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("SOCIETETEN", "Societeten"),
                            ("STILLETIME", "Stilletime"),
                            ("KRYSSELISTE", "Krysseliste"),
                            ("BURGERLISTE", "Burgerliste"),
                        ],
                        default="SOCIETETEN",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("creation_date", models.DateField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SociOrderSessionOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.IntegerField()),
                ("ordered_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_session_orders",
                        to="economy.sociproduct",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="economy.sociordersession",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="soci_order_session_orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Soci Order Session Order",
                "verbose_name_plural": "Soci Order Session Orders",
            },
        ),
        migrations.CreateModel(
            name="ProductOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order_size",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(limit_value=1)
                        ],
                    ),
                ),
                ("purchased_at", models.DateTimeField(auto_now_add=True)),
                (
                    "cost",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(limit_value=1)
                        ]
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="economy.sociproduct",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        default=economy.models.SociSession.get_active_session,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="product_orders",
                        to="economy.socisession",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_orders",
                        to="economy.socibankaccount",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product order",
                "verbose_name_plural": "Product orders",
            },
        ),
        migrations.CreateModel(
            name="DepositComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("comment", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "deposit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="economy.deposit",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="all_deposit_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="deposit",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="deposits",
                to="economy.socibankaccount",
            ),
        ),
        migrations.AddField(
            model_name="deposit",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="verified_deposits",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="productorder",
            index=models.Index(
                fields=["session", "source"], name="economy_pro_session_6d6c6d_idx"
            ),
        ),
        migrations.AddField(
            model_name="deposit",
            name="stripe_payment_id",
            field=models.CharField(blank=True, max_length=64, null=True),
        ),
        migrations.AddField(
            model_name="deposit",
            name="stripe_payment_intent_status",
            field=models.CharField(
                blank=True,
                choices=[("CREATED", "Created"), ("SUCCESS", "Success")],
                default="CREATED",
                max_length=32,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="deposit",
            name="amount",
            field=models.IntegerField(help_text="Amount paid by customer"),
        ),
        migrations.AddField(
            model_name="deposit",
            name="deposit_method",
            field=models.CharField(
                blank=True,
                choices=[
                    ("VIPPS", "Vipps"),
                    ("BANK_TRANSFER", "Bank Transfer"),
                    ("STRIPE", "Stripe"),
                ],
                max_length=32,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="deposit",
            name="resolved_amount",
            field=models.IntegerField(
                blank=True,
                help_text="Amount after deducting stripe fee's and flooring to a whole number, if applicable.",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="socibankaccount",
            name="external_charge_secret",
            field=models.CharField(blank=True, max_length=64, null=True),
        ),
        migrations.CreateModel(
            name="ExternalCharge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.IntegerField()),
                ("reference", models.CharField(blank=True, default="", max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("webhook_attempts", models.IntegerField(default=0)),
                ("webhook_success", models.BooleanField(default=False)),
                (
                    "bank_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="external_charges",
                        to="economy.socibankaccount",
                    ),
                ),
                (
                    "bar_tab_customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="external_charges",
                        to="bar_tab.bartabcustomer",
                    ),
                ),
            ],
            options={
                "verbose_name": "External Charge",
                "verbose_name_plural": "External Charges",
            },
        ),
        migrations.AlterModelOptions(
            name="socisession",
            options={"permissions": [("can_overcharge", "Can overcharge")]},
        ),
    ]
